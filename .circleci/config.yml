version: 2.1

master_filter: &master_filter
  branches:
    only: master

develop_filter: &develop_filter
  branches:
    only: develop

feature_filter: &feature_filter
  branches:
    ignore:
      - master
      - develop
orbs:
  node: circleci/node@2.0.1
  slack: circleci/slack@3.2.0

executors:
  node:
    docker:
      - image: circleci/node:10.16

commands:
  build:
    steps:
      - checkout
      - run: npm install      

jobs:
  build_and_test:
    executor: node
    working_directory: ~/covid-react
    steps:
      - build
      - run: npm test
  publish_to_expo:
    executor: node
    working_directory: ~/covid-react
    steps:
      - build
      - run: npx expo-cli login -u $EXPO_USERNAME -p $EXPO_PASSWORD
      # - run: npx expo-cli publish --non-interactive --max-workers 1 --release-channel $RELEASE_CHANNEL
  upload_android_apk:
    executor: node
    working_directory: ~/covid-react
    steps:
      # - run: npx expo-cli build:android --release-channel $RELEASE_CHANNEL --no-publish
      - run: curl -o app.apk "$(npx expo-cli url:apk --non-interactive)"
      - run: fastlane android $FASTLANE_LANE

workflows:
  test_all_pushes:
    jobs:
      - build_and_test
      - publish_to_expo:
          context: dev
          requires:
            - build_and_test
      - upload_android_apk:
          context: dev
          requires:
            - publish_to_expo
  build_and_test:
    jobs:
      - build_and_test:
          filters: *feature_filter
  dev_deployment:
    jobs:
      - build_and_test:
          filters: *develop_filter
      - publish_to_expo:
          filters: *develop_filter
          context: dev
          requires:
            - build_and_test
      - upload_android_apk:
          filters: *develop_filter
          context: dev
          requires:
            - publish_to_expo

  master_deployment:
    jobs:
      - build_and_test:
          filters: *master_filter